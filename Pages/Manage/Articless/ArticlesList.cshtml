@page
@model SunuerManageEn.Pages.Manage.Articless.ArticlesListModel
@{
}
<style>
    .layui-table-tool {
        position: sticky;
        top: 0;
        z-index: 10000;
        background: #fff;
    }
</style>
<!-- Main toolbar -->

<div class="layui-form" lay-filter="layuiadmin-app-form-list" id="layuiadmin-app-form-list" style="padding: 20px 30px 0 0;">


    <div class="layui-inline">
        <input type="text" id="ArticleTitle" name="ArticleTitle" class="layui-input" placeholder="Title " lay-filter="ArticleTitle" style="width: 165px;" autocomplete="off">
    </div>
    <button class="layui-btn layuiadmin-btn-list" lay-submit lay-filter="LAY-app-contlist-search">
        <i class="layui-icon layui-icon-search layuiadmin-button-btn"></i>
    </button>
</div>
<div class="layui-card-body">
    <div style="padding-top: 10px;">
        <span id="tongji"></span>
    </div>
</div>
<!-- Main table -->

<table id="LAY-app-content-list" lay-filter="LAY-app-content-list"></table>
<!-- layui -->

<script>
    layui.config({
        base: '/js/layuiadmin/' //Path of static resources
    }).extend({
        index: 'lib/index' //Main entry module
        , lang: 'lang/en' // Extend a language module
    }).use(['index', 'table', 'laydate', 'layer', 'upload'], function() {

        var table = layui.table, form = layui.form;
        var $ = layui.jquery, upload = layui.upload;
        var laydate = layui.laydate;


        //Execute a date selection example
        laydate.render({
            elem: '#stDate',
        lang: 'en'
        });
        //Execute a date selection example
        laydate.render({
            elem: '#enDate',
        lang: 'en'
        });
        //Listen for header toolbar events
        table.on('toolbar(LAY-app-content-list)', function(obj) {
            var checkStatus = table.checkStatus(obj.config.id)
                , data = checkStatus.data; //Get the selected data
            switch (obj.event) {
                case 'add':
                    layer.open({
                        type: 2
                        , title: 'Add '
                        , content: 'ArticlesAdd?BigID=@Model.BigID'
                        , maxmin: true
                        , area: ['90%', '90%']
                        , yes: function(index, layero) {
                            //Click Confirm to trigger a button submission in the iframe content
                            var submit = layero.find('iframe').contents().find("#layuiadmin-app-form-submit");
                            submit.click();
                        }
                    });
                    break;
                case 'update':
                    if (data.length === 0) {
                        layer.msg('Please select a row');
                    } else if (data.length > 1) {
                        layer.msg('Only one edit allowed at a time');
                    } else {
                        layer.open({
                            id: 'bianji',
                            type: 2,
                            title: 'Edit',
                            content: 'ArticlesEdt?ArticleID=' + checkStatus.data[0].ArticleID,
                            anim: 1,
                            shadeClose: true,
                            shade: 0.8,
                            resize: false,
                            area: ['90%', '90%']
                        });

                    }
                    break;
                case 'delete':
                    if (data.length === 0) {
                        layer.msg('Please select a row');
                    } else {
                        var listdata = '';
                        layer.confirm('Are you sure you want to delete?', function(index) {

                            var indexs = layer.load();
                            checkStatus.data.forEach(function(n, i) {
                                listdata = listdata + n.ArticleID + ",";
                            });

                            //Send the Delete command to the server
                            $.ajax({
                                url: "/api/Articles/Delete",
                                type: "post",
                                data: { ArticleIDs: listdata },
                                dataType: "json",
                                success: function(datax) {
                                    if (0 == datax.code) {
                                       layer.msg(datax.msg, { time: 1000 }, function () {
                                       location.reload()
                                       layer.close(index)
                                    });
                                   } else {
                                  layer.msg(datax.msg, {
                                  icon: 1,
                                  time: 3000 //Close after 2 seconds (if not configured, the default is 3 seconds)）
                                   }, function() {
                                   layer.closeAll();
                                  });
                                 }
                                }
                            })
                            //table.reload('LAY-app-content-list');
                            //layer.msg('已Delete');
                        });
                    }
                    break;
            };
        });
        //Listen for search
        form.on('submit(LAY-app-contlist-search)', function(data) {
            var field = data.field;
            //Execute reload
            table.reload('LAY-app-content-list', {
                where: field
                , page: {
                    curr: 1 //Restart from page 1
                }
                , limit: 15
                , limits: [15, 15, 20, 25, 30]
                , text: { none: 'No data' }
            });

        });

        //Management
        table.render({
            elem: '#LAY-app-content-list'
            , toolbar: '#toolbarDemo' //Enable the header toolbar and bind the left-side template
            , defaultToolbar: []
            , url: '/api/Articles/Get?BigID=@Model.BigID' //Interface
            , cols: [[
                { type: 'checkbox', fixed: 'left', width: 80 }
                ,
                { field: 'ArticleID', width: 100, title: 'ID', sort: true }
                , { field: 'ArticleTitle', title: 'Title ' }
                , { field: 'BigTitle', title: 'Category' }
                , { field: 'Statues', title: 'Status', templet: '#Statuess' }
                , { field: 'Sorts', title: 'Sort Order' }
                , { field: 'Hits', title: 'Page Views' }
                , { field: 'ReleaseTime', width: 200, title: 'Publish Time', templet: '<div>{{ (d.ReleaseTime).replace("T", " ") }}</div>', sort: true }
                , { field: 'CreateDate', width: 200, title: 'Creation Time', templet: '<div>{{ (d.CreateDate).replace("T", " ") }}</div>', sort: true }
                , { title: 'Operation', width: 180, align: 'center', fixed: 'right', toolbar: '#table-content-list' }
            ]], request: {
                pageName: 'Page', //Page number parameter name
                limitName: 'PageSize' //Records per page parameter name
            }
            , page: true
            , limit: 15
            , limits: [10, 15, 20, 25, 30, 300]
            , text: 'Sorry, an error occurred while loading!'
            , done: function(res, curr, count) {
                $("#total").html(count);
            }, text: { none: 'No data' }
        });
        //Listen for toolbar
        table.on('tool(LAY-app-content-list)', function(obj) {
            var data = obj.data;
            if (obj.event === 'edit') {
                var ids = data.ArticleID;
                layer.open({
                    id: 'bianji',
                    type: 2,
                    title: 'Edit',
                    content: 'ArticlesEdt?ArticleID=' + ids,
                    anim: 1,
                    shadeClose: true,
                    shade: 0.8,
                    resize: false,
                    area: ['90%', '90%']
                });

            } else if (obj.event === 'del') {
                layer.confirm('Are you sure you want to delete?', function(index) {
                    var indexs = layer.load();
                    var ArticleID = data.ArticleID;
                    //Send the Delete command to the server
                    $.ajax({
                        url: "/api/Articles/Delete",
                        type: "post",
                        data: { ArticleIDs: ArticleID + "," },
                        dataType: "json",
                        success: function(datax) {
                            if (0 == datax.code) {
                            layer.msg(datax.msg, { time: 1000 }, function () {
                            location.reload()
                            layer.close(index)
                            });
                            } else {
                            layer.msg(datax.msg, {
                            icon: 1,
                                time: 3000 //Close after 2 seconds (if not configured, the default is 3 seconds)）
                             }, function() {
                            layer.closeAll();
                            });
                            }
                        }
                    })
                });
            }
        });

    });

    function GetDateFormat(str) {
        return new Date(parseInt(str.replace("/Date(", "").replace(")/", ""), 10)).toLocaleString();
    }
</script>

<!-- Data template -->
<script type="text/html" id="CreateDates">
    {{ toDate(d.CreateDate).pattern("yyyy-MM-dd") }}
</script>


<script type="text/html" id="Statuess">
    {{# return d.Statues=="0"?"<span style='color:#ec6f1b'>Show</span>":d.Statues=="1"?"隐藏":""  }}
</script>
<script type="text/html" id="toolbarDemo">
    <div class="layui-btn-container">
        @if (Model.AdminModel.Roles.IndexOf("|21|") > -1)
        {
                      <button class="layui-btn layuiadmin-btn-list " lay-event="add"><i class="layui-icon layui-icon-add-1"></i>Add </button>
        }
        @if (Model.AdminModel.Roles.IndexOf("|22|") > -1)
        {
                      <button class="layui-btn layuiadmin-btn-list " lay-event="update"><i class="layui-icon layui-icon-edit"></i>Edit</button>
        }
        @if (Model.AdminModel.Roles.IndexOf("|23|") > -1)
        {
                      <button  class="layui-btn layuiadmin-btn-list" lay-event="delete"><i class="layui-icon layui-icon-delete"></i>Delete</button>
        }
    </div>
</script>

<script type="text/html" id="table-content-list">
    @if (Model.AdminModel.Roles.IndexOf("|22|") > -1)
    {
                     <a class="layui-btn layui-btn-normal layui-btn-xs" lay-event="edit"><i class="layui-icon layui-icon-set"></i>Edit</a>
    }

    @if (Model.AdminModel.Roles.IndexOf("|23|") > -1)
    {
                        <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del"><i class="layui-icon layui-icon-delete"></i>Delete</a>
    }
</script>